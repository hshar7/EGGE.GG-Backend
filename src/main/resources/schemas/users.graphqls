type User {
    id: String!
    publicAddress: String!
    name: String
    username: String!
    email: String
    avatar: String!
    createdAt: Date!
    updatedAt: Date!
}

type JwtAuthenticationResponse {
    accessToken: String!
    tokenType: String!
    username: String
    publicAddress: String
    userAvatar: String
    userId: String
}

extend type Query {
    user(id: String): User
    signInUser(username: String, password: String): JwtAuthenticationResponse
    myProfile: User
}

extend type Mutation {
    signUpUser(metadata: NewUserInput): User
#    metadata(metadata: UserInput): User
}

input NewUserInput {
    publicAddress: String!
    username: String!
    name: String!
    email: String!
    password: String!
}
