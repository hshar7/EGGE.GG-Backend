enum RoleName {
    ROLE_PLAYER,
    ROLE_ORGANIZER,
    ROLE_ADMIN
}

type Role {
    id: String!,
    name: RoleName!
}

type User {
    id: String!
    publicAddress: String!
    name: String
    username: String!
    email: String
    avatar: String!
    roles: [Role]!
    createdAt: Date!
    updatedAt: Date!
}

type JwtAuthenticationResponse {
    accessToken: String!
    tokenType: String!
    username: String
    publicAddress: String
    userAvatar: String
    userId: String
    roles: [Role]!
}

extend type Query {
    user(id: String): User
    signInUser(username: String, password: String): JwtAuthenticationResponse
    myProfile: User
}

extend type Mutation {
    signUpUser(metadata: NewUserInput!): User
    assignRoleToUser(roleName: RoleName!, userId: String!): User
    updateMyMetadata(metadata: UpdateUserInput!): User
    updateMyPassword(oldPassword: String!, newPassword: String!): Boolean
}

input NewUserInput {
    publicAddress: String!
    username: String!
    name: String!
    email: String!
    password: String!
}

input UpdateUserInput {
    username: String
    name: String
    email: String
}
