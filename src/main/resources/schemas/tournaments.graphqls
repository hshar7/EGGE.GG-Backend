type Tournament {
    id: String!
    tournamentId: Int!
    deadline: Date!
    name: String!
    matches: [Match]
    description: String!
    status: String!
    prize: BigDecimal!
    maxPlayers: Int!
    participants: [User]
    token: Token
    prizeDistribution: [Int]
    owner: User!
    game: Game!
    featured: Boolean!
    coverImage: String!
    createdAt: Date!
    updatedAt: Date!
}

extend type Query {
    tournaments(count: Int, offset: Int): [Tournament]!
    tournament(id: String!): Tournament
    findTournamentsByString(count: Int, offset: Int, fieldName: String, fieldData: String): [Tournament]!
    findTournamentsByBool(count: Int, offset: Int, fieldName: String, fieldData: Boolean): [Tournament]!
}

extend type Mutation {
    addParticipant(tournamentId: String, userId: String): Tournament
    matchWinner(pos: Int, matchId: String): [Match]!
}
